##################################################
# 根据原来的xxxxxDesc.cpp文件，生成数据包定义文件
# 依赖原FTCPPackageDesc.cpp中的TID以及包体内容的定义
# date: 2017-5-16
# powered by cgm
# 用法: 本脚本只根据FTCPPackageDesc.cpp文件,进行生成
#       生成包定义后，可手动复制粘贴到目标文件中
#       对于包内结构定义，可以手动进一步修改    
##################################################

src_file="./desc.cpp"
tmp_file="./tmp.tmp"
targe_file="./pkg_def_gen_by_tool.h"
let total_tid=0
let line_num=0
let total_line=`cat $src_file|wc -l`

rm -f $targe_file

echo "//////////////////////////////////////////////////" >> $targe_file
echo "// `date +%Y%m%d`"  >> $targe_file
echo "// generated by $0" >> $targe_file
echo "//////////////////////////////////////////////////" >> $targe_file
echo '#ifndef __PKG_DEF_H__' >>  $targe_file
echo '#define __PKG_DEF_H__' >>  $targe_file

echo "" >>  $targe_file
echo '#include "fld_def.h"'  >>  $targe_file
echo '#include "pkg_base.h"' >>  $targe_file
echo "" >>  $targe_file
echo '#define DECL_TID(id) enum{TID = id}' >>  $targe_file
echo '#define DECL_LABEL() \'              >>  $targe_file
echo 'public: \'                           >>  $targe_file
echo '    uint32_t label_{0}; \'           >>  $targe_file
echo '	uint32_t get_label() \'            >>  $targe_file
echo '	{ \'                               >>  $targe_file
echo '		return label_; \'              >>  $targe_file
echo '	}'                                 >>  $targe_file
echo '#define DECL_LABEL_MOCK() \'         >>  $targe_file
echo 'public: \'                           >>  $targe_file
echo '	uint32_t get_label() \'            >>  $targe_file
echo '	{ \'                               >>  $targe_file
echo '		return 0; \'                   >>  $targe_file
echo '	}'                                 >>  $targe_file
echo "" >>  $targe_file

while read aline
do
#	echo "line content: "$aline
	# 这行有多种写法
	tid=`expr "$aline" : '\s*{\(TID_.*\),{'`
	if [[ "$tid" != "" ]]; then
		busi_name=`echo ${tid#*_}`
#		echo $busi_name
		cmnt=`echo "$aline" | cut -d '"' -f 2`
#		echo $cmnt
		printf "    $tid,\t\t//$cmnt\n" >> $targe_file
		let total_tid++
	fi

	let line_num++
	let percent=0
	percent=`awk -v x=$line_num -v y=$total_line 'BEGIN{printf "%02d",x/y*100}'`
	printf " [In process]:$line_num/$total_line ($percent%%)\r"
done < $src_file

echo "};" >> $targe_file
echo "" >>  $targe_file
echo "// There are $total_tid package define in total" >> $targe_file
echo "// Attention! This number is reliable depens on nobody modify this file manually!" >> $targe_file
echo "" >>  $targe_file
echo '#endif' >>  $targe_file
echo "" >>  $targe_file

